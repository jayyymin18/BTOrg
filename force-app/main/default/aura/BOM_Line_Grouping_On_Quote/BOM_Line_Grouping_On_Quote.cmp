<aura:component implements="force:hasRecordId,flexipage:availableForRecordHome" controller="BOM_Line_Grouping_On_Quote" access="global">
    <aura:attribute name="recordId" type="string" />
    <aura:attribute name="groupFieldList" type="List" />
    <aura:attribute name="QuoteLineWrapper" type="Object" />
    <aura:attribute name="page" type="integer" description="Use for store page Number" />
    <aura:attribute name="totalColumn" type="integer" />
    <aura:attribute name="secondGrouping" type="Boolean" default="false" />
    <aura:attribute name="thirdGrouping" type="Boolean" default="false" />
    <aura:attribute name="forthGrouping" type="Boolean" default="false" />
    <aura:handler name="init" value="{!this}" action="{!c.doInit}" />

    <div style="background: white">
        <table class="slds-table">
            <tbody>
                <aura:iteration items="{!v.QuoteLineWrapper.groupWrapper}" var="group1">
                    <tr>
                        <td class="groupHeader" colspan="{!v.totalColumn+1}">
                            <aura:if isTrue="{!group1.groupName != undefined}">
                                {!group1.groupName}
                                <aura:set attribute="else">
                                    No Grouping
                                </aura:set>
                            </aura:if>
                        </td>
                    </tr>
                    <tr>
                        <th class="tableHeader" style="width: 30px;"></th>
                        <aura:iteration items="{!v.QuoteLineWrapper.columns}" var="col">
                            <th class="tableHeader">
                                {!col.label}
                            </th>
                        </aura:iteration>
                    </tr>
                    <aura:iteration items="{!group1.quoteLineList}" var="quoteItem">
                        <tr>
                            <td style="width: 30px;"> </td>
                            <aura:iteration items="{!quoteItem.FieldDataList}" var="fildData">
                                <td>
                                    <aura:if isTrue="{! (fildData.fieldType == 'number' || fildData.fieldType == 'currency' || fildData.fieldName == 'buildertek__Markup__c' 
                                                        || fildData.fieldName == 'buildertek__Margin__c' || fildData.fieldName == 'buildertek__Additional_Discount__c' || fildData.fieldName == 'buildertek__Profit_Margin__c' )}">

                                        <aura:if isTrue="{!fildData.fieldType == 'number'}">
                                            <lightning:formattedNumber value="{!fildData.fieldValue}" maximumFractionDigits="2"/>
                                        </aura:if>

                                        <aura:if isTrue="{!fildData.fieldType == 'currency'}">
                                            <lightning:formattedNumber value="{!fildData.fieldValue}" style="currency" currencyDisplayAs="code"/>
                                        </aura:if> 

                                        <aura:if isTrue="{! (fildData.fieldName == 'buildertek__Markup__c' || fildData.fieldName == 'buildertek__Margin__c' || 
                                                        fildData.fieldName == 'buildertek__Additional_Discount__c' || fildData.fieldName == 'buildertek__Profit_Margin__c' )}" >
                                            <lightning:formattedNumber value="{!fildData.fieldValue}" style="percent" maximumFractionDigits="2"/>
                                        </aura:if>

                                        <aura:set attribute="else">
                                            {!fildData.fieldValue}
                                        </aura:set>
                                    </aura:if>
                                </td>
                            </aura:iteration>
                        </tr>
                    </aura:iteration>
                </aura:iteration>
            </tbody>
        </table>
    </div>

</aura:component>